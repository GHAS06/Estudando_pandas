1 - Abrindo arquivos csv bom pandas, precisamos importar o pandas

import pandas as pd 

df = pd.read_csv("/caminho/arquivo.csv")

2 - Passando parâmetros para a função pd.read_csv
                                                                             parâmetros
EXEMPLO: df = pd.read_csv(r/"caminho/arquivo.csv", encoding = "UTF-8", sep = ",", header = 0, nrows = 100, usecols = ["lista de colunas"])

encoding -> é a forma como o arquivo csv foi formatado ou contruido

sep -> é a separação entre as colunas do arquivo, pode ser , ou ; 

header -> É o nome das colunas, por aqui indicamos por onde começa a leitura do arquivo
sempre pelo indicie

nrows -> Quantidade de linhas que serão lidas

usecols = [] -> lista as colunas que queremos utilizar, o nome da coluna deve estar 
extamente igual


3 - Abrindo arquivos xlsx (Arquivos Excel) com pandas, funciona na mesma lógica do 
arquivo csv porém com comando um pouco diferente. 

EXEMPLO: df = pd.read_excel(r"/caminho/arquivo.xlsx", parâmetros)

4 - Abrindo outras ABAS do Excel, para isso usamos o parâmetros sheet_name = indicie da ABA ou o nome da ABA

EXEMPLO: EXEMPLO: df = pd.read_excel(r"/caminho/arquivo.xlsx", encoding = "latin1", sep = ",", nrows = 100, sheet_name = 1)

5 - Verificando especificamente o nome da ABA de um arquivo.xlsx com sheet_names

EXEMPLO: arquivo_excel = pd.ExcelFile(r"/Caminho/arquivo.xlsx")

arquivo_excel.sheet_names # retorna o nome das ABAS do arquivo excel

ABA1 = arquivo_excel.parse("Exatamente o nome da ABA do arquivo_excel")
ABA2 = arquivo_excel.parse("Exatamente o nome da ABA do arquivo_excel")

